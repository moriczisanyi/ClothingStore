
import java.io.File;
import java.util.ArrayList;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

import Model.Angajat;

public class CreateXMLFileJava {

	public static final String xmlFilePath = "xmlfile.xml";

	private static void delete(String id) {
		String xmlFile = xmlFilePath;
		try {
			DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
			DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
			Document document = documentBuilder.parse(xmlFile);
			NodeList products = document.getElementsByTagName("Angajat");
			for (int i = 0; i < products.getLength(); i++) {
				Element product = (Element) products.item(i);
				Element idTag = (Element) product.getElementsByTagName("nume").item(0);
				if (idTag.getTextContent().equalsIgnoreCase(id)) {
					idTag.getParentNode().getParentNode().removeChild(products.item(i));
					break;
				}
			}
			saveXMLContent(document, xmlFile);
		} catch (Exception e) {
			System.err.println(e.getMessage());
		}
	}

	private static void saveXMLContent(Document document, String xmlFile) {
		try {
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			transformer.setOutputProperty(OutputKeys.INDENT, "yes");
			DOMSource domSource = new DOMSource(document);
			StreamResult streamResult = new StreamResult(xmlFile);
			transformer.transform(domSource, streamResult);
		} catch (Exception ex) {
			System.out.println(ex.getMessage());
		}
	}

	public static void createXML() {
		try {

			DocumentBuilderFactory documentFactory = DocumentBuilderFactory.newInstance();

			DocumentBuilder documentBuilder = documentFactory.newDocumentBuilder();

			Document document = documentBuilder.newDocument();

			// root element
			ArrayList<Angajat> angajati = new ArrayList<Angajat>();
			Angajat ang1 = new Angajat("Jhon", "Jhon12", "passw", 25);
			Angajat ang2 = new Angajat("Jhony", "Jhon12", "passw", 25);
			angajati.add(ang1);
			angajati.add(ang2);
			Element root = document.createElement("Magazin");
			document.appendChild(root);

			// employee element
			for (Angajat ang : angajati) {

				Element employee = document.createElement("Angajat");

				root.appendChild(employee);

				// set an attribute to staff element
				// Attr attr = document.createAttribute("id");
				// attr.setValue("10");
				// employee.setAttributeNode(attr);

				// you can also use staff.setAttribute("id", "1") for this

				// firstname element
				Element firstName = document.createElement("nume");
				firstName.appendChild(document.createTextNode(ang.accesNume()));
				employee.appendChild(firstName);

				// lastname element
				Element lastname = document.createElement("username");
				lastname.appendChild(document.createTextNode(ang.accesUsername()));
				employee.appendChild(lastname);

				// email element
				Element email = document.createElement("parola");
				email.appendChild(document.createTextNode(ang.accesParola()));
				employee.appendChild(email);

				// department elements
				Element department = document.createElement("varsta");
				department.appendChild(document.createTextNode(Integer.toString(ang.accesVarsta())));
				employee.appendChild(department);
			}
			// create the xml file
			// transform the DOM Object to an XML File
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			StreamResult streamResult = new StreamResult(new File(xmlFilePath));


			transformer.transform(domSource, streamResult);

			System.out.println("Done creating XML File");

		} catch (ParserConfigurationException pce) {
			pce.printStackTrace();
		} catch (TransformerException tfe) {
			tfe.printStackTrace();
		}
	}

	public static void main(String argv[]) {
		createXML();
		delete("Jhon");
	}
}