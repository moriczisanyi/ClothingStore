package Presenter;

import Model.Angajat;
import Model.AngajatPersistenta;
import Model.Magazin;
import Model.Produs;
import Model.ProdusPersistenta;
import View.GUIAutentificare;
import View.IAngajatView;

import java.io.IOException;
import java.util.ArrayList;

import javax.swing.JOptionPane;


public class PAngajat {
	private IAngajatView angajat_v;
	public PAngajat(IAngajatView ang)
	{
		this.angajat_v=ang;
	}
	
	
	
	
	public void Logout()
	{
		new GUIAutentificare();
	}
	public ArrayList<String> accesListaProduse()
	{
		ProdusPersistenta angPers = new ProdusPersistenta();
		return angPers.accesListaProduse(angajat_v.numeMagazinText());
	}
	public boolean adaugare()
	{
		String numeProdus=angajat_v.numeText();
		String producator=angajat_v.producatorText();
		String pret=angajat_v.pretText();
		String disponibilitate=angajat_v.disponibilitateText();
		String numeMagazin=angajat_v.numeMagazinText();
		if(numeProdus.contentEquals("") || producator.contentEquals("") || pret.contentEquals("") || disponibilitate.contentEquals(""))
		{
			return false;
		}

		ProdusPersistenta prodPers= new ProdusPersistenta();
		try
		{
			double pretDouble = Double.parseDouble(pret);
		}
		catch (NumberFormatException e)
		{
			JOptionPane.showMessageDialog(null, "Eroare: formatul pretului trebuie sa fie x.y","Error", JOptionPane.ERROR_MESSAGE);
		}
		Produs produs= new Produs(numeProdus,producator,Double.parseDouble(pret),Integer.parseInt(disponibilitate));
		try {
			prodPers.salvare(produs, numeMagazin);
			return true;
		} catch (IOException e) {
			return false;
		}
	}
	public boolean stergere()
	{
		
		String temp = angajat_v.boxProdusText();
		String[] dateProdus= new String[2];
		dateProdus=temp.split("-");
		String numeMagazin= angajat_v.numeMagazinText();
		ProdusPersistenta prodPers = new ProdusPersistenta();
		Produs produs= new Produs(dateProdus[0],dateProdus[1]);
		Magazin magazin= new Magazin(numeMagazin);
		return prodPers.stergere(produs, magazin);

	}
	public boolean actualizare()
	{
		String numeProdus=angajat_v.numeText();
		String producator=angajat_v.producatorText();
		String pret=angajat_v.pretText();
		String disponibilitate= angajat_v.disponibilitateText();
		String numeMagazin= angajat_v.numeMagazinText();
		String temp=angajat_v.boxProdusText();
		String[] dateProdus= new String[2];
		dateProdus=temp.split("-");
		ProdusPersistenta prodPers = new ProdusPersistenta();
		Produs produsNou= new Produs(numeProdus,producator,Double.parseDouble(pret),Integer.parseInt(disponibilitate));
		Produs produs=new Produs(dateProdus[0],dateProdus[1]);
		Magazin magazin= new Magazin(numeMagazin);
		return prodPers.actualizare(produs, produsNou, magazin);
	}
}
